En este tutorial para C#, usará Visual Studio para crear y ejecutar una aplicación de consola y explorar algunas características del entorno de desarrollo integrado (IDE) de Visual Studio mientras lo hace.
Si todavía no ha instalado Visual Studio, vaya a la página de descargas de Visual Studio para instalarlo de forma gratuita.
Si todavía no ha instalado Visual Studio, vaya a la página de descargas de Visual Studio para instalarlo de forma gratuita.

Para empezar, crearemos un proyecto de aplicación de C#. En el tipo de proyecto se incluyen todos los archivos de plantilla que vamos a necesitar, sin necesidad de agregar nada más.
Abra Visual Studio 2017.
En la barra de menús superior, seleccione Archivo > Nuevo > Proyecto. (Como alternativa, presione Ctrl+Mayús+N).
En el panel izquierdo del cuadro de diálogo Nuevo proyecto, expanda C# y elija .NET Core. En el panel central, elija Aplicación de consola (.NET Core) . Después, asigne el nombre Calculator al archivo.
Plantilla de proyecto Aplicación de consola (.NET Core) en el cuadro de diálogo Nuevo proyecto en el IDE de Visual Studio

https://docs.microsoft.com/es-es/visualstudio/get-started/csharp/media/new-project-csharp-calculator-console-app.png?view=vs-2019

Agregar una carga de trabajo (opcional)
Si no ve la plantilla de proyecto Aplicación de consola (.NET Core) , puede obtenerla si agrega la carga de trabajo Desarrollo multiplataforma de .NET Core. Esta es la manera de hacerlo.
Opción 1: Uso del cuadro de diálogo Nuevo proyecto
Elija el vínculo Abrir el Instalador de Visual Studio en el panel de la izquierda del cuadro de diálogo Nuevo proyecto.
Elija el vínculo Abrir el Instalador de Visual Studio del cuadro de diálogo Nuevo proyecto

https://docs.microsoft.com/es-es/visualstudio/get-started/csharp/media/csharp-open-visual-studio-installer-generic-dark.png?view=vs-2019

Se iniciará el Instalador de Visual Studio. Elija la carga de trabajo Desarrollo multiplataforma de .NET Core y, después, elija Modificar.
Carga de trabajo Desarrollo multiplataforma de .NET Core en el instalador de Visual Studio

Opción 2: Uso de la barra del menú Herramientas
Cancele para salir del cuadro de diálogo Nuevo proyecto y, en la barra de menús superior, seleccione Herramientas>Obtener herramientas y características...
Se iniciará el Instalador de Visual Studio. Elija la carga de trabajo Desarrollo multiplataforma de .NET Core y, después, elija Modificar.
Abra Visual Studio 2019.
En la ventana de inicio, elija Crear un proyecto nuevo.
Visualización de la ventana "Crear un proyecto"

En el cuadro de búsqueda de la ventana Crear un proyecto, escriba consola. Seguidamente, elija C# en la lista de lenguajes y luego, Windows en la lista de plataformas.
Después de aplicar los filtros de lenguaje y plataforma, elija la plantilla Aplicación de consola (.NET Core) y luego, Siguiente.
Elija la plantilla C# para Aplicación de consola (.NET Framework).

https://docs.microsoft.com/es-es/visualstudio/get-started/media/vs-2019/create-new-project-dark-theme.png?view=vs-2019

Note

Si no ve la plantilla Aplicación de consola (.NET Core) , puede instalarla desde la ventana Crear un proyecto. En el mensaje ¿No encuentra lo que busca? , elija el vínculo Instalar más herramientas y características.
Vínculo "Instalar más herramientas y características" del mensaje "¿No encuentra lo que busca?" que aparece en la ventana "Crear proyecto"

Luego, en el Instalador de Visual Studio, elija la carga de trabajo Desarrollo multiplataforma de .NET Core.
Carga de trabajo Desarrollo multiplataforma de .NET Core en el instalador de Visual Studio

Después, elija el botón Modificar en el Instalador de Visual Studio. Es posible que se le pida que guarde su trabajo; si es así, hágalo. Seguidamente, elija Continuar para instalar la carga de trabajo. Luego, vuelva al paso 2 de este procedimiento "Crear un proyecto".
En la ventana Configurar el nuevo proyecto, escriba Calculator en el cuadro Nombre del proyecto. Luego, elija Crear.
En la ventana "Configurar el nuevo proyecto", asigne al proyecto el nombre "Calculator".
https://docs.microsoft.com/es-es/visualstudio/get-started/csharp/media/vs-2019/csharp-create-new-project-search-console-net-core-filtered.png?view=vs-2019
Visual Studio abre el nuevo proyecto, que incluye código predeterminado de "Hola mundo".
Creación de la aplicación
En primer lugar, exploraremos algunos cálculos de enteros básicos en C#. Después, agregaremos código para crear una calculadora básica. Después de eso, depuraremos la aplicación para buscar y corregir errores. Por último, perfeccionaremos el código para que sea más eficaz.
Análisis de las operaciones matemáticas con enteros
Empecemos con algunos cálculos básicos de enteros en C#.
En el editor de código, elimine el código predeterminado "Hello World".
Eliminar el código "Hello World" predeterminado de la nueva aplicación de calculadora

https://docs.microsoft.com/es-es/visualstudio/get-started/csharp/media/vs-2019/csharp-name-your-calculator-project.png?view=vs-2019

En concreto, elimine la línea que dice Console.WriteLine("Hello World!");.
En su lugar, escriba este código:
        int a = 42;
        int b = 119;
        int c = a + b;
        Console.WriteLine(c);
        Console.ReadKey();
Tenga en cuenta que, al hacerlo, la función IntelliSense en Visual Studio le ofrece la opción de autocompletar la entrada.
Animación de código de cálculos de enteros que muestra la función autocompletar de IntelliSense en el IDE de Visual Studio

Elija Calculator para ejecutar el programa, o bien presione F5.
Elección del botón Calculator para ejecutar la aplicación desde la barra de herramientas

Se abre una ventana de consola que muestra la suma de 42+119, cuyo resultado es 161.
Ventana de consola que muestra los resultados de cálculos de enteros

(Opcional) Puede modificar el operador para cambiar el resultado. Por ejemplo, puede cambiar el operador + en la línea de código int c = a + b; por - para la resta, * para la multiplicación o / para la división. A continuación, al ejecutar el programa, el resultado también cambia.
Cierre la ventana de la consola.



Instalación de dotnet core 2.2.



En este mini tutorial, dejare los pasos para instalar el NET CORE 2.2 en Visual Studio 2015 (community).

Primero que nada, bajaremos el SDK desde la pagina oficial de Microsoft, en el boton “Download .NET Core SDK”.

EL SDK queda instalado en esta ruta: C:\Program Files\dotnet
https://tydw.files.wordpress.com/2019/04/dotnet-ruta-fisica.png
Pero no instala la interfaz grafica para el VS 2015 aun.

Para esto debemos bajar los siguientes software:

01 dotnet-sdk-2.2.202-win-x64.exe Mencionado al inicio.
02 dotnet-standard-support-vs2015-2.0.0-win-x86.msi
03 DotNetCore.1.0.0-VS2015Tools.Preview2.exe

Estos dos ultimos son opcionales (si no los tienes instalados)

04 .Net Framework 7.2 (NDP472-DevPack-ENU.exe)
05 SP 3 para VS 20115 (vs2015.3.exe)

1) Instalacion de Microsoft .NET Core SDK 2.2.202

2) Microsft .NET Core 1.0.0 VS 2015 Tooling Preview 2
https://tydw.files.wordpress.com/2019/04/01.png
https://tydw.files.wordpress.com/2019/04/02.png
https://tydw.files.wordpress.com/2019/04/03.png
https://tydw.files.wordpress.com/2019/04/05.png
https://tydw.files.wordpress.com/2019/04/06.png
https://tydw.files.wordpress.com/2019/04/07.png

3) creado un proyecto Web APi con NET CORE en Visual Studio 2015
https://tydw.files.wordpress.com/2019/04/09.png
https://tydw.files.wordpress.com/2019/04/10.png?w=300&h=234

4) Corregir Errores de Referencias con Nuget (Package Restore Failed)
https://tydw.files.wordpress.com/2019/04/13.png?w=213&h=300
https://tydw.files.wordpress.com/2019/04/14.png?w=300&h=179
Agregar “dotnet-core” con el link https://dotnet.myget.org/F/dotnet-core/api/v3/index.json

https://tydw.files.wordpress.com/2019/04/15.png

Ejecutar el comando “dotnet restore”

https://tydw.files.wordpress.com/2019/04/16.png?w=300&h=76
https://tydw.files.wordpress.com/2019/04/18.png?w=300&h=169

Y con esto ya podemos crear aplicaciones ligeras con NET CORE 2.2 en Visual Studio 2015.
El Visual Studio 2017 ya lo trae incorporado e imagino que la visal studio 2019 tambien lo tendra integrado.

Eso seria todo amigos!

Link: https://www.talkingdotnet.com/install-asp-net-core-create-first-application/

TYDW.-



